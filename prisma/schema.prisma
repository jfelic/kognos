generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [vector]
}

model User {
  id             String          @id @default(cuid())
  fronteggId     String          @unique
  email          String          @unique
  name           String?
  knowledgeBases KnowledgeBase[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model KnowledgeBase {
  id          String     @id @default(cuid())
  name        String
  description String?
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  documents   Document[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  
  @@index([userId])
}

model Document {
  id              String        @id @default(cuid())
  filename        String
  originalText    String
  fileSize        Int?
  mimeType        String?
  knowledgeBaseId String
  knowledgeBase   KnowledgeBase @relation(fields: [knowledgeBaseId], references: [id], onDelete: Cascade)
  chunks          Chunk[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  @@index([knowledgeBaseId])
}

model Chunk {
  id         String                  @id @default(cuid())
  content    String
  embedding  Unsupported("vector")?
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  chunkIndex Int
  createdAt  DateTime @default(now())
  
  @@index([documentId])
}